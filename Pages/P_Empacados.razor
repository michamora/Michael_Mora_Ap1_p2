@page "/P_Empacados"

@page "/P_Empacados/{EmpacadosId:int}"

@inject IToastService toastService

<EditForm Model="entradaEmpacados" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

     <div class="card shadow-lg">

        <div class="card align-items-center">

            <div class="card-header align-items-center">
                
                <h3 class="card-title">Entrada de productos Empacados</h3>
            </div>

            <div class="card-body">

                @* Buscar *@
                <div class="form-group align-items-right">

                    <div class="form-row">

                        <label>Id</label>

                        <div class="input-group">

                            <InputNumber @bind-Value="entradaEmpacados.EmpacadosId " class="form-control col-4 col" />
                            

                            <div class="input-group-append col">
                                <button type="button" class="btn btn-primary input-group-text "
                                    @onclick="Buscar"><span class="oi oi-magnifying-glass"></span></button>
                            </div>
                        </div>
                    </div>                 
                </div>

               <br>
                 
 
                <div class="row">


                @* Fecha *@
                <div class="form-group">
                    <label>Fecha</label>
                    <InputDate @bind-Value="entradaEmpacados.Fecha" />
                    
                </div>
 

                    @* Concepto *@
                    <div class="form-group mt-3">
                        <label>Concepto</label>
                        <InputText class="form-control" @bind-Value="entradaEmpacados.Concepto" placeholder="Concepto Producto"/>
                        <ValidationMessage For="@(() => entradaEmpacados.Concepto)" />
                    </div>


                </div>

                <br> @* br Da espacios *@

                     @* hr Una linea *@

                      @*........................... Utilizados ...........................*@
                       
                <div class="card align-items">
                    <div class="row">
  
                    
                        <h3>Utilizados</h3>
                   
                      @* Producto *@
                    <div class="form-group col ">
                        <label>Producto</label>
                          <InputSelect class="form-control col-2 " @bind-Value="Idproducto"> 
                            <option disabled value='0'>   Seleccione un producto   </option>
                            @foreach (var item in ListaDeProductos) 
                                {
                                    <option value="@item.ProductoId.ToString()" >@item.Descripcion</option> 

                                    
                                }  

                                
                            </InputSelect>
                            <ValidationMessage For="@(() => entradaEmpacados.ProductoId)" />
                            </div>

                       @* Cantidad Utilizada *@
                    <div class="form-group col">
                        <label>Cantidad</label>
                        <InputNumber class="form-control" @bind-Value=" entradaEmpacados.CantidadUtilizada"/>
                        <ValidationMessage For="@(() => entradaEmpacados.CantidadUtilizada)" />
                        
                    </div>

                       
                       @* Boton Add *@
                    <div class="form-group col-2">
                      <button type="button" class="btn btn-primary" @onclick="AgregarProducto">
                      <span class="oi oi-plus">Add</span>
                      </button>
                    </div>

                    </div>

                    
                       <br> 
                        <table class="table table-light">
                            <thead class="thead-dark">
                                <tr class="table-light">
                                    

                                    <th>ProductoId</th>

                                    <th>Descripci&oacute;n</th>

                                    <th>Cantidad</th>
                                </tr>
                            </thead>
                            <tbody>
                               
                                @foreach (var item in entradaEmpacados.EmpacadosDetalle)
                                {
                                    
                                    <tr>
                                       
                                        <td>@item.EmpacadosDetalleId</td>
                                        <td>@item.producto.Descripcion</td>
                                        <td>@entradaEmpacados.CantidadUtilizada</td>

                                        <td><span class="oi oi-trash text-danger oi oi-x" href="#"  title='Remover Producto'
                                          @onclick=" (() => RemoverProducto(item)) "> </span></td>
                                    </tr>

                                          
                                }
            
                            </tbody>
                        </table>
                    <br>
                         @* Peso *@
                    <div class="form-group mt-8 ">
                        <label>Peso Total</label>
                        <InputNumber readonly class="form-group col" placeholder="Disabled input" aria-label="Disabled input example" disabled @bind-Value="entradaEmpacados.PesoTotal" />
                        <label>Gr</label>
                        
                    </div>
                           <br>
                    </div>
                           <br>

                      @*........................... Producidos ...........................*@
                       
                <div class="card align-items">
                    <div class="row">

                    
                        <h3>Producido</h3>
                   
                    
                    <div class="form-group col ">
                        <label>Producto</label>
                    
                    
                        <InputSelect class="form-control col-2 " @bind-Value="entradaEmpacados.ProductoId"> 
                            <option disabled value='0'>   Seleccione un producto   </option>
                            @foreach (var item in ListaDeProductos)
                                {
                                     <option value="@item.ProductoId" >@item.Descripcion</option>

                                     
                                } 
                         </InputSelect> 
                         <ValidationMessage For="@(() => entradaEmpacados.ProductoId)" />

                       </div>

                       @* Cantidad Producidos *@
                    <div class="form-group col">
                        <label>Cantidad</label>
                        <InputNumber class="form-control" @bind-Value="entradaEmpacados.CantidadProducida" @onblur="CantidadProducidaChanged"/>
                        <ValidationMessage For="@(() => entradaEmpacados.CantidadProducida)" />
                        
                    
                     

                   
                  
                   </div>
                   </div>
                   
                   </div>

                   </div>
                   
                   
                            <div class="card-footer">

                @*........................... Botones ...........................*@

                <div class="form-group text-center" display: inline-block>
                    
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                    <span class="oi oi-plus">Nuevo</span>
                    </button>
                    
                    <button type="submit" class="btn btn-lg btn-success" "Guardar">
                    <span class="oi oi-clipboard">Guardar</span>
                    </button>

                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                    <span class="oi oi-circle-x">Eliminar</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
            


</EditForm>

@code { 

    #nullable disable // Para quitar el aviso de nulls
    private string Idproducto { get; set; } = "";


    [Parameter]
    public int EmpacadosId { get; set; }

    
   
    public EntradaEmpacados entradaEmpacados { get; set; } = new EntradaEmpacados();
    public EmpacadosDetalle empacadosDetalle { get; set; } = new EmpacadosDetalle();
   
    public List<Productos> ListaDeProductos { get; set; } = new List<Productos>(); 

    public Productos producto { get; set; } = new Productos();

    private double Peso {get; set; } = 0;

    [Inject]
    public ProductoBLL productoBLL { get; set; }

    [Inject]
    public EntradaEmpacadosBLL entradaEmpacadosBLL { get; set; }


     protected override void OnInitialized()
    {
         this.entradaEmpacados.EmpacadosId = EmpacadosId;
         
         Buscar();
         ListaDeProductos = productoBLL.GetListaProductos(p => true);
    }

    protected void Buscar() 
    {
        if (this.entradaEmpacados.EmpacadosId > 0)
        { 
            var encontrado = entradaEmpacadosBLL.Buscar(this.entradaEmpacados.EmpacadosId);
            
            if (encontrado != null)
            {        
                this.entradaEmpacados = encontrado;
                
                toastService.ShowSuccess($"Producto : {entradaEmpacados.Concepto} encontrado ");
            }
            else
            {
                toastService.ShowError($"No existe un producto con este Id: {entradaEmpacados.EmpacadosId}");
            }
        }
    
    }

   
    
  
     public void AgregarProducto()
    {  

          this.producto = productoBLL
          .Buscar(Utilidad.ToInt(Idproducto));

          this.empacadosDetalle.producto = producto;

          this.empacadosDetalle.EmpacadosDetalleId = producto.ProductoId;  // Producto utilizado
          this.entradaEmpacados.CantidadUtilizada = entradaEmpacados.CantidadUtilizada;
          CalcularPesoUtilizado();
         
   
            bool existe = entradaEmpacados
            .EmpacadosDetalle.Any(p => p
            .EmpacadosDetalleId == empacadosDetalle
            .EmpacadosDetalleId);

            if (!existe) 

            this.entradaEmpacados.EmpacadosDetalle.Add(this.empacadosDetalle);

             else 
        {
            var encontrado = entradaEmpacados
            .EmpacadosDetalle.Find(p => p
            .EmpacadosDetalleId == empacadosDetalle
            .EmpacadosDetalleId);

            if(encontrado!=null)
            {
                
                this.entradaEmpacados.EmpacadosDetalle.Remove(encontrado);
                this.entradaEmpacados.EmpacadosDetalle.Add(this.empacadosDetalle);
            }
        }
            
            this.empacadosDetalle = new EmpacadosDetalle();
            this.producto = new Productos();
          
            
    }

     private void CantidadProducidaChanged()
    {
        var esta = productoBLL.Buscar(entradaEmpacados.ProductoId);

        if(esta!=null)

        Peso = entradaEmpacados.CantidadProducida * producto.Peso;
            
    }

     private void RemoverProducto(EmpacadosDetalle item)
    {
        toastService.ShowInfo("Producto removido");
        this.entradaEmpacados.EmpacadosDetalle.Remove(item);
        RemoverPeso();
        
    }
     public void Nuevo() 
    {
        
        this.entradaEmpacados = new EntradaEmpacados();
        this.empacadosDetalle = new EmpacadosDetalle();
  
    }
    
    public void CalcularPesoProducido() 
    {
        
      Peso += entradaEmpacados.CantidadUtilizada * empacadosDetalle.producto.Peso;
      
    }

    public void CalcularPesoUtilizado() 
    {

     entradaEmpacados.PesoTotal += entradaEmpacados.CantidadUtilizada * empacadosDetalle.producto.Peso;
    }


     public void CalculoValorInventario() 
    {
        
      producto.ValorInventario = producto.Existencia * producto.Costo; 
    }

     public void RemoverPeso() 
    {
        
      entradaEmpacados.PesoTotal -= entradaEmpacados.CantidadUtilizada * empacadosDetalle.producto.Peso;
      
    }

       public void Guardar()
       {
           CalcularPesoUtilizado();
           CalcularPesoProducido();
           CalculoValorInventario();
        
        if (entradaEmpacadosBLL.Guardar(entradaEmpacados))
        {
            
            toastService.ShowSuccess("Se guardó exitosamente");
            Nuevo();
        }
        else
            toastService.ShowError("No se pudo guardar.");
           
       }

     public void Eliminar()
    {
        if (entradaEmpacadosBLL.Eliminar(entradaEmpacados.EmpacadosId))
        {
            Nuevo();
            toastService.ShowSuccess("Eliminación con exito");
        }
        else
        {
            toastService.ShowError("Error, Eliminación fallida");
        }
    }


   

}


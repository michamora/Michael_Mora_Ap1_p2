@page "/R_Productos"

@page "/R_Productos/{ProductoId:int}"

@*............................ Registro de productos ............................*@

@inject IToastService toastService

<EditForm Model="producto" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

     <div class="card shadow-lg">

        <div class="card align-items-center">

            <div class="card-header align-items-center">
                <h3 class="card-title">Registro de Productos
                    <div class="oi oi-cart" ></div>
                </h3>              
            </div>

            @*................... Buscar ...................*@

            <div class="card-body">

                <div class="form-group align-items-right">

                    <div class="form-row" >

                        <label>Producto Id</label>

                        <div class="input-group" >

                            <InputNumber @bind-Value="producto.ProductoId"  class="form-control col-4 col" />

                            <div class="input-group-append col">
                                <button type="button" class="btn btn-primary input-group-text "
                                    @onclick="Buscar"><span class="oi oi-magnifying-glass">Buscar</span></button>
                            </div>
                        </div>
                    </div>                 
                </div>

                <hr>
                 
                 @*................... Descripcion ...................*@

                 <div class="row">
                    <div class="form-group ">
                        <label>Descripci&oacute;n</label>
                        <InputText class="form-control" @bind-Value="producto.Descripcion" placeholder="Descripción Producto"/>
                        <ValidationMessage For="@(() => producto.Descripcion)" />
                    </div>

                     @*................... Costo ...................*@

                    <div class="form-group mt-3 ">
                        <label>Costo</label>
                        <InputNumber class="form-control" @bind-Value="producto.Costo" />
                        <ValidationMessage For="@(() => producto.Costo)" />
                    </div>

                    @*................... Existencia ...................*@

                    <div class="form-group col ">
                        <label>Existencia</label>
                        <InputNumber class="form-control" @bind-Value="producto.Existencia"  />
                        <ValidationMessage For="@(() => producto.Existencia)" />
                    </div>

                       @*................... Precio ...................*@

                    <div class="form-group col">
                        <label>Precio</label>
                        <InputNumber class="form-control" @bind-Value="producto.Precio"  />
                        <ValidationMessage For="@(() => producto.Precio)" />
                    </div>

                      @*................... Fecha ...................*@

                <div class="form-group mt-3">
                    <label>Fecha</label>
                    <InputDate @bind-Value="producto.FechaVencimiento" />
                    <ValidationMessage For="@(() =>producto.FechaVencimiento)" />
                </div>

                  @*................... Peso ...................*@

                    <div class="form-group mt-3 ">
                        <label>Peso</label>
                        <InputNumber class="form-group col" @bind-Value="producto.Peso" />
                        <label>Gr</label>
                        <ValidationMessage For="@(() => producto.Peso)" />
                    </div>

                        @* ----------- *@
                <div class="form-group mt-3">
                    <hr>      
                </div>
                   

                 @*................... Porcentaje Ganancia ...................*@

            <div Class= "form-group col" > 
                <p class="text-primary" >Ganancia</p> 
                    <InputNumber readonly class="form-group col" placeholder="Disabled input" aria-label="Disabled input example" disabled @bind-Value="producto.Ganancia" @onchange="Ganancia" />
                    <label>%</label>
                    <ValidationMessage For="@(() => producto.Ganancia)" />
                </div>

                    @*................... Valor de Inventario ...................*@
                    <div class="form-group col">
                        <p class="text-success">Valor Inventario</p>                       
                        <InputNumber readonly class="form-group col" placeholder="Disabled input" aria-label="Disabled input example" disabled @bind-Value="producto.ValorInventario" />
                        <ValidationMessage For="@(() => producto.ValorInventario)" />
                    </div>                                      
                </div>
                
                <br>

                <hr>

                @*.............................. Productos Detalle ..............................*@

                <div class="card align-items-center">
                    <div class="card-header align-items-center">
                        <h3>Detalle</h3>
                    </div>

                    <form>
                        <div class="input-group d-flex align-items-end">                

                            @*................... Presentacion ...................*@

                            <div class="form-group col">
                                <label>Presentación</label>
                                <InputText id="presentacion" class="form-control" 
                                @bind-Value="Detalle.Presentacion" placeholder="Presentación del producto"/>
                                <ValidationMessage For="@(() => Presentacion)" />
                            </div>

                            @*................... Cantidad ...................*@

                            <div class="form-group col">
                                <label>Cantidad</label>
                                <InputNumber class="form-control" @bind-Value="Detalle.Cantidad" />
                                <ValidationMessage For="@(() => Cantidad)" />                              
                            </div>

                            @*................... Precio ...................*@

                            <div class="form-group col">
                                <label>Precio</label>
                                <InputNumber class="form-control" @bind-Value="Detalle.Precio" />
                                <ValidationMessage For="@(() => Precio)" />                          
                            </div>

                            @*................... Agregar Detalle ...................*@

                            <button type="button" class="btn btn-warning" @onclick="AgregarDetalle">                                
                                <span class="oi oi-plus" >Agregar</span>
                            </button>
                        </div>
                        
                        <br>

                        <table class="table table-secondary">
                            <thead class="thead-dark">
                                <tr class="table-warning">
                                    
                                    <th>Presentación</th>

                                    <th>Cantidad</th>

                                    <th>Precio</th>
                                </tr>
                            </thead>
                        <tbody>

                              @if (producto.ProductosDetalle is not null)
                              {
                                @foreach (var item in producto.ProductosDetalle)
                                {
                                    <tr>
                                        
                                        <td>@item.Presentacion</td>
                                        <td>@item.Cantidad</td>
                                        <td>RD$ @item.Precio</td>
                                        
                                        <td><span class="btn btn-sm btn-outline-danger oi oi-ban" href="#" title='Remover Detalle' @onclick=" (() => RemoverDetalle(item)) "> </span></td>
                                    </tr>
                                }
                            }
                            </tbody>
                        </table>
                    </form>

                </div>
            </div>
            
                @*................... Botones ...................*@

             
              <div class="card-footer">

                <div class="form-group text-center" display: inline-block>
                    
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                    <span class="oi oi-plus"> Nuevo</span>
                    </button>
                    
                    <button type="submit" class="btn btn-lg btn-success">
                    <span class="oi oi-clipboard"> Guardar</span>
                    </button>
                   
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                    <span class="oi oi-trash"> Eliminar</span>
                    </button>
                </div>
            </div>
        </div>
    </div>

</EditForm>

@code {

    #nullable disable // Para quitar el aviso de nulls
    public string Presentacion { get; set; } 
    public float Cantidad { get; set; }
    public float Precio { get; set; }

    [Parameter]  
    public int ProductoId { get; set; }
    public Productos producto { get; set; } = new Productos();
    public ProductosDetalle Detalle { get; set; } = new ProductosDetalle();
    
    [Inject]
    public ProductoBLL productoBLL { get; set; } // Inyectando BLL
   

    protected override void OnInitialized()
    {
        producto.ProductoId = ProductoId;
        Buscar();
    }

    public void Buscar()
    {
             
        if (this.producto.ProductoId > 0)
        {
            var encontrado = productoBLL.Buscar(this.producto.ProductoId);
            
            if (encontrado != null)
            {
                this.producto = encontrado;
                toastService.ShowSuccess($"Producto : {producto.Descripcion}, encontrado");
            }
            else
            {          
                 toastService.ShowError($"No existe un producto con este Id: {producto.ProductoId}");
            }      
        }      
    }

     public void Nuevo() // Nuevo producto
    {
        toastService.ShowSuccess("Nuevo producto");
        this.producto = new Productos();
        this.producto.ProductosDetalle = new List<ProductosDetalle>();      
    }

    
    public void Ganancia() // Calcular ganancia

    {
          producto.Ganancia =  Convert.ToInt32(((producto.Precio - producto.Costo) / producto.Costo) * 100); 
    }


     
    private void CalculoValorInventario() // Calcular valor inventario
    {
        producto.ValorInventario = producto.Costo * producto.Existencia;      
    }

    
     public void Guardar()
    {
        
        bool guardo = productoBLL.Guardar(producto);
        if (guardo)
        {
             this.producto = new Productos();
             this.producto.ProductosDetalle = new List<ProductosDetalle>();

             toastService.ShowSuccess($"Producto : {producto.Descripcion}, se guardó exitosamente");
             // Indicando nombre el producto que se guardo
        }
        else
            toastService.ShowError("No se pudo guardar.");
       
    }

    
    
     public void Eliminar() // Eliminar producto
    {
        if (productoBLL.Eliminar(producto.ProductoId))
        {
             this.producto = new Productos();
             this.producto.ProductosDetalle = new List<ProductosDetalle>();
            toastService.ShowSuccess("Eliminación con exito");
        }
        else
        {
            toastService.ShowError("Eliminación fallida");
        }
    }


    public void AgregarDetalle() // Agregar detalle
    {
         toastService.ShowInfo("Detalle agregado");
         this.producto.ProductosDetalle.Add(this.Detalle);
         Detalle = new ProductosDetalle();
    }


     private void RemoverDetalle(ProductosDetalle item) // Remover detalle
    {
        toastService.ShowInfo("Detalle removido");
        this.producto.ProductosDetalle.Remove(item);
    }  

}